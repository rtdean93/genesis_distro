<?php
/**
 * @file
 * Code for the curate feature.
 */

include_once 'curate.features.inc';

/**
 *  Implements hook_post_features_enable_feature(). 
 */
function curate_post_features_enable_feature($component) {
  // Log components as they are enabled.
  watchdog('component', 'curate enabled ' . $component . ' component');
}

/**
 *  Implements hook_post_features_rebuild().
 */
function curate_post_features_rebuild($component) {
  // Revert CKEditor profiles as they were rebuilt before all filters
  // had finished rebuilding (Features a-z index logic bug).
  if ($component == 'filter') {
    features_revert(array('curate' => array('ckeditor_profile')));
  }
}

/**
 * Implements hook_block_list_alter().
 *
 * This is an override for the Edit module.
 * See: https://drupal.org/node/2029783
 */
function curate_block_list_alter(&$blocks) {
  foreach ($blocks as $block) {
    if ($block->delta == 'edit') {
      $blocks[$block->bid]->region = '';
    }
  }
  return $blocks;
}

/**
 * Implements hook_entity_info_alter().
 */
function curate_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['alternate'] = array(
    'label' => t('Alternate'),
    'custom settings' => TRUE,
  );
}

/**
 * Implements hook_field_widget_form_alter().
 */
function curate_field_widget_form_alter(&$element, &$form_state, $context) {
  if (isset($element['overwrite']) && $element['overwrite']['#title'] == t('Remove collection from previous revision')) {
    $element['overwrite']['#default_value'] = 1;
  }
}

